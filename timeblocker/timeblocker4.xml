<Module>
	<ModulePrefs title="Time Blocker" height="800" author_email="leigh765@me.com">
		<Require feature="google.calendar-0.5"/>
	</ModulePrefs>
	<Content type="html">
		<![CDATA[ 
			
				<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 	
				<html> 
					<head><title>Test</title>
					<script src="https://code.jquery.com/jquery-1.7.1.min.js"></script>
					<script src="https://api.trello.com/1/client.js?key=64fc156c61511f09dc91241c5b4f0be1"></script>
					<style>
						body {
						    font-family: arial;
						    font-size: 12px;
						}

						#loggedout {
						    text-align: center;
						    font-size: 20px;
						    padding-top: 30px;
						}
						#loggedin { 
						    display: none; 
						}

						#header {
						    padding: 4px;
						    border-bottom: 1px solid #000;
						    background: #eee;
						}

						#output {
						    padding: 4px;
						}

						.card { 
						    display: block; 
						    padding: 2px;
						}

					</style>

					</head>
					<body ng-app> 
						
						
						<!--add a variable for the view-->
						
						<div ng-controller="calendarCntrl">
							<div id="loggedout">
							    <a id="connectLink" href="#" ng-click="trelloAuth()">Connect To Trello</a>
							</div>

							<div id="loggedin">
							    <div id="header">
							        Logged in to as <span id="fullName"></span> 
							        <a id="disconnect" href="#" ng-click="trelloDeauth()">Log Out</a>
							    </div>
							    
							    <div id="output"></div>
							</div>   
							<h5>Add a Block {{membername}} {{bob}}</h5>
							<div>
											
								<input type="textarea" placeholder= "paste your token here"/>
								<button>Synch with my trello boards</button>
							</div>
							
						
							<div>
								Board:
								<span  >
								  <select ng-model="board"  ng-change="getcards(board.id)" ng-options="board.name for board in boards">
								    <option value="">-- Choose a board --</option>
								  </select>
								</span><br/>

								Card:
								<span  >
								  <select ng-model="card" ng-options="card.name for card in cards">
								    <option value="">-- Choose a card --</option>
								  </select>
								</span><br/>
								<!---->
								Offering:
								<span  >
								  <select ng-model="offering" ng-options="o.name for o in offerings">
								    <option value="">-- choose offering --</option>
								  </select>
								</span><br/>
							</div>
							<button ng-click="event(board, card)">Add TimeBlock</button>
						</div>
						
						<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script> 


						<script>

							

							
							function calendarCntrl($scope, $http) {
								$scope.bob = "bob";
								var onAuthorize = function($scope) {
								    updateLoggedIn();
								    $("#output").empty();
								    
								    Trello.members.get("me", function(member, $scope){
								        $("#fullName").text(member.fullName);
								        $scope.membername = "test";
								    
								        var $cards = $("<div>")
								            .text("Loading Cards...")
								            .appendTo("#output");

								        // Output a list of all of the cards that the member 
								        // is assigned to
								        Trello.get("members/me/cards", function(cards) {
								            $cards.empty();
								            $.each(cards, function(ix, card) {
								                $("<a>")
								                .attr({href: card.url, target: "trello"})
								                .addClass("card")
								                .text(card.name)
								                .appendTo($cards);
								            });  
								        });
								    });

								};

								var updateLoggedIn = function() {
								    var isLoggedIn = Trello.authorized();
								    $("#loggedout").toggle(!isLoggedIn);
								    $("#loggedin").toggle(isLoggedIn);        
								};
								    
								$scope.trelloDeauth = function() {
								    Trello.deauthorize();
								    updateLoggedIn();
								};
								Trello.authorize({
								    interactive:false,
								    success: onAuthorize
								});

								$scope.trelloAuth = function(){
								    Trello.authorize({
								        type: "popup",
								        success: onAuthorize
								    });
								};
								    
								
								var trello_key = 'key=64fc156c61511f09dc91241c5b4f0be1',
								trello_token= 'token=c2e0c8f3b122fd98be140aca4e877cb139bc9542525b024d43e553a48a7f2ed3';
								
								
								$scope.offerings = [
								 	{name:'Meeting', value:"0"},
								 	{name:'Documentation', value:"1"},
								 	{name:'Interface Design', value:"2"},
								 	{name:'Visual Design', value:"3"},
								 	{name:'CSS', value:"4"},
								 	{name:'Javascript', value:"5"},
								 	{name:'HTML', value:"6"}
								    
								];
								$scope.phases = [
									{name:'Admin', value:"0"},
									{name:'RFP', value:"1"},
									{name:'Inception', value:"2"},
									{name:'Implementation', value:"3"},
									{name:'Follow Up', value:"4"}
								   
								];
							  
							  	$http.get('https://api.trello.com/1/members/me/boards?' + trello_key + "&"+trello_token).
							  	  	success(function(data, status, headers, config) {
							  	    	//console.log(data);
							  	    	$scope.boards = data;
							  	    	boardtasks(data);
							  	  	}).
							  	  	error(function(data, status, headers, config) {
							  	    	// called asynchronously if an error occurs
							  	    	// or server returns response with an error status.
							  	 	});
							  	$scope.getcards = function(boardid){
							  		var cards_url ='https://api.trello.com/1/boards/'+ boardid +'/cards?' + trello_key + "&"+trello_token;
							  		$http.get(cards_url).
							  		  	success(function(data, status, headers, config) {
							  		    	console.log(data);
							  		    	$scope.cards = data;
							  		    	
							  		  	}).
							  		  	error(function(data, status, headers, config) {
							  		    	// called asynchronously if an error occurs
							  		    	// or server returns response with an error status.
							  		 	});
							  	}
						  		var card_array = [],
						  		card_obj = {},
						  		cardid_array = [];
								function boardtasks(data){
									angular.forEach(data, function(value, key) {
										angular.forEach(value, function(value_board, key_board) {
											if (key_board == "id"){
												cardid_array.push(value_board);
											}
										});
								  	
									});

								};

							  
							   
							   $scope.event = function(board, card) { 
								var location_add= board.name +"."+card.name;
								var title_add= board.name +": "+card.name;
								var eventData = { 
									title: title_add, 
									details: 'details_add', 
									location: location_add, 
									allDay: false
									};
									
								google.calendar.composeEvent(eventData); 


								}
							 
							
							}
							
						</script>
					
				</body> 
				</html>

		]]>
	</Content>
</Module>

